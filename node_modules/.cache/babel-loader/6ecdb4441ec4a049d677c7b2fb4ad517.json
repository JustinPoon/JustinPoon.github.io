{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/justinpoon/Documents/Github/my-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asdfad',\n        name: 'Giselle',\n        age: '48'\n      }, {\n        id: 'asdfae',\n        name: 'Justin',\n        age: '25'\n      }, {\n        id: 'fadsfa',\n        name: 'Donald',\n        age: '78'\n      }],\n      otherState: 'not part of the above array',\n      showPersons: false\n    };\n\n    this.switchNamehandler = newName => {\n      //console.log('Was Clicked');\n      this.setState({\n        persons: [{\n          name: newName,\n          age: '25'\n        }, {\n          name: 'Giselle',\n          age: '2'\n        }, {\n          name: 'Donald',\n          age: '78'\n        }]\n      });\n    };\n\n    this.nameChangedHandler = event => {\n      const person = this.state.persons.find();\n      this.setState({\n        persons: [{\n          name: 'Manu',\n          age: '25'\n        }, {\n          name: event.target.value,\n          age: '2'\n        }, {\n          name: 'Donald',\n          age: '78'\n        }]\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    this.deletePersonHandler = PersonIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(PersonIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.persons.map((person, index) => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            click: () => this.deletePersonHandler(index),\n            name: person.name,\n            age: person.age,\n            changed: event => this.nameChangedHandler(event, person.id)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Hi i'm a React App! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.togglePersonsHandler,\n        children: \" Click Me! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), persons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinpoon/Documents/Github/my-app/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","switchNamehandler","newName","setState","nameChangedHandler","event","person","find","target","value","togglePersonsHandler","doesShow","deletePersonHandler","PersonIndex","splice","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n\n\nclass App extends Component {\n  state = {\n    persons: [\n      {id: 'asdfad', name: 'Giselle', age: '48'},\n      {id: 'asdfae', name: 'Justin', age: '25'},\n      {id: 'fadsfa', name: 'Donald', age: '78'}\n    ],\n    otherState: 'not part of the above array',\n    showPersons: false\n  }\n  \n\n\n  switchNamehandler = (newName) => {\n    //console.log('Was Clicked');\n    this.setState( {\n      persons: [\n        { name: newName, age: '25'},\n        { name: 'Giselle', age: '2'},\n        { name: 'Donald', age: '78'}\n      ]\n    })\n  };\n\n  nameChangedHandler = (event) => {\n    const person = this.state.persons.find();\n\n    this.setState( {\n      persons: [\n        { name: 'Manu', age: '25'},\n        { name: event.target.value, age: '2'},\n        { name: 'Donald', age: '78'}\n      ]\n    })\n  }\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({showPersons: !doesShow})\n  }\n\n  deletePersonHandler = (PersonIndex) => {\n    const persons = [...this.state.persons];\n    persons.splice(PersonIndex, 1);\n    this.setState({persons: persons})\n  }\n\n  render(){\n\n    let persons = null;\n\n    if (this.state.showPersons){\n      persons = (\n        <div>\n        {this.state.persons.map((person, index) => {\n          return <Person\n            click = {() => this.deletePersonHandler(index)}\n            name = {person.name}\n            age = {person.age}\n            key = {person.id}\n            changed = {(event) => this.nameChangedHandler(event, person.id)} />\n        })}\n      </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <div> Hi i'm a React App! </div>\n        <button\n          onClick={this.togglePersonsHandler}> Click Me! </button>\n        {persons}\n      </div>\n    );\n  };\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}