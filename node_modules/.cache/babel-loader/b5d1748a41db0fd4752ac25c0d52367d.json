{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/justinpoon/Documents/Github/my-app/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: \"asdfad\",\n        name: \"Giselle\",\n        age: \"48\"\n      }, {\n        id: \"asdfae\",\n        name: \"Justin\",\n        age: \"25\"\n      }, {\n        id: \"fadsfa\",\n        name: \"Donald\",\n        age: \"78\"\n      }],\n      otherState: \"not part of the above array\",\n      showPersons: false\n    };\n\n    this.switchNamehandler = newName => {\n      //console.log('Was Clicked');\n      this.setState({\n        persons: [{\n          name: newName,\n          age: \"25\"\n        }, {\n          name: \"Giselle\",\n          age: \"2\"\n        }, {\n          name: \"Donald\",\n          age: \"78\"\n        }]\n      });\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const PersonIndex = this.state.persons.findIndex(p => {\n        return p.id == id;\n      });\n      const person = { ...this.state.persons[PersonIndex]\n      };\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[PersonIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    this.deletePersonHandler = PersonIndex => {\n      const persons = [...this.state.persons];\n      persons.splice(PersonIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.persons.map((person, index) => {\n          return /*#__PURE__*/_jsxDEV(Person, {\n            click: () => this.deletePersonHandler(index),\n            name: person.name,\n            age: person.age,\n            changed: event => this.nameChangedHandler(event, person.id)\n          }, person.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"backgroundCircle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Hi i'm a React App! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.togglePersonsHandler,\n        children: \" Click Me! \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), persons]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/justinpoon/Documents/Github/my-app/src/App.js"],"names":["React","Component","Person","App","state","persons","id","name","age","otherState","showPersons","switchNamehandler","newName","setState","nameChangedHandler","event","PersonIndex","findIndex","p","person","target","value","togglePersonsHandler","doesShow","deletePersonHandler","splice","render","map","index"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Person from \"./Person/Person\";\n\nclass App extends Component {\n  state = {\n    persons: [\n      { id: \"asdfad\", name: \"Giselle\", age: \"48\" },\n      { id: \"asdfae\", name: \"Justin\", age: \"25\" },\n      { id: \"fadsfa\", name: \"Donald\", age: \"78\" },\n    ],\n    otherState: \"not part of the above array\",\n    showPersons: false,\n  };\n\n  switchNamehandler = (newName) => {\n    //console.log('Was Clicked');\n    this.setState({\n      persons: [\n        { name: newName, age: \"25\" },\n        { name: \"Giselle\", age: \"2\" },\n        { name: \"Donald\", age: \"78\" },\n      ],\n    });\n  };\n\n  nameChangedHandler = (event, id) => {\n    const PersonIndex = this.state.persons.findIndex((p) => {\n      return p.id == id;\n    });\n\n    const person = {\n      ...this.state.persons[PersonIndex],\n    };\n\n    person.name = event.target.value;\n\n    const persons = [...this.state.persons];\n    persons[PersonIndex] = person;\n\n    this.setState({ persons: persons });\n  };\n\n  togglePersonsHandler = () => {\n    const doesShow = this.state.showPersons;\n    this.setState({ showPersons: !doesShow });\n  };\n\n  deletePersonHandler = (PersonIndex) => {\n    const persons = [...this.state.persons];\n    persons.splice(PersonIndex, 1);\n    this.setState({ persons: persons });\n  };\n\n  render() {\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = (\n        <div>\n          {this.state.persons.map((person, index) => {\n            return (\n              <Person\n                click={() => this.deletePersonHandler(index)}\n                name={person.name}\n                age={person.age}\n                key={person.id}\n                changed={(event) => this.nameChangedHandler(event, person.id)}\n              />\n            );\n          })}\n        </div>\n      );\n    }\n    return (\n      <div className=\"App\">\n        <div className=\"backgroundCircle\"></div>\n        <div> Hi i'm a React App! </div>\n        <button onClick={this.togglePersonsHandler}> Click Me! </button>\n        {persons}\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}